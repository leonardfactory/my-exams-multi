var app;

app = angular.module('app', ['ionic', 'ngStorage']);

app.run(function($ionicPlatform) {
  return $ionicPlatform.ready(function() {
    if (window.cordova && window.cordova.plugins.Keyboard) {
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
    }
    if (window.StatusBar) {
      return StatusBar.styleDefault();
    }
  });
});

app.config(function($stateProvider, $urlRouterProvider) {
  $stateProvider.state("tab", {
    url: "/tab",
    abstract: true,
    templateUrl: "templates/tabs.html"
  }).state('tab.exams', {
    url: '/exams',
    views: {
      'tab-exams': {
        templateUrl: 'templates/tab-exams.html',
        controller: 'ExamsController'
      }
    }
  }).state('tab.stats', {
    url: '/stats',
    views: {
      'tab-stats': {
        templateUrl: 'templates/tab-stats.html',
        controller: 'StatsController'
      }
    }
  }).state('tab.settings', {
    url: '/settings',
    views: {
      'tab-settings': {
        templateUrl: 'templates/tab-settings.html',
        controller: 'SettingsController'
      }
    }
  });
  return $urlRouterProvider.otherwise('/tab/exams');
});

var ExamsController;

app.controller('ExamsController', ExamsController = (function() {
  function ExamsController($scope, $ionicModal, $localStorage) {
    this.$scope = $scope;
    this.$scope.$storage = $localStorage;
    this.$scope.exam = {};
    $ionicModal.fromTemplateUrl('templates/add-exam.html', {
      scope: this.$scope,
      animation: 'slide-in-up'
    }).then((function(_this) {
      return function(modal) {
        return _this.$scope.modal = modal;
      };
    })(this));
    this.$scope.addExam = (function(_this) {
      return function() {
        return _this.$scope.modal.show();
      };
    })(this);
    this.$scope.saveExam = (function(_this) {
      return function() {
        if (_this.$scope.$storage.exams == null) {
          _this.$scope.$storage.exams = [];
        }
        _this.$scope.$storage.exams.push(_this.$scope.exam);
        _this.$scope.modal.hide();
        return console.log('Hello! Saved.');
      };
    })(this);
    this.$scope.$on('modal.hidden', (function(_this) {
      return function() {
        return _this.$scope.exam = {};
      };
    })(this));
  }

  return ExamsController;

})());

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb2ZmZWUiLCJyb3V0ZXMuY29mZmVlIiwiY29udHJvbGxlci9FeGFtc0NvbnRyb2xsZXIuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUEsR0FBQTs7QUFBQSxHQUFBLEdBQU0sT0FBTyxDQUFDLE1BQVIsQ0FBZSxLQUFmLEVBQXNCLENBQUMsT0FBRCxFQUFVLFdBQVYsQ0FBdEIsQ0FBTixDQUFBOztBQUFBLEdBRUcsQ0FBQyxHQUFKLENBQVEsU0FBQyxjQUFELEdBQUE7U0FDTixjQUFjLENBQUMsS0FBZixDQUFxQixTQUFBLEdBQUE7QUFDbkIsSUFBQSxJQUFHLE1BQU0sQ0FBQyxPQUFQLElBQW1CLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQTdDO0FBQ0UsTUFBQSxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyx3QkFBekIsQ0FBa0QsSUFBbEQsQ0FBQSxDQURGO0tBQUE7QUFHQSxJQUFBLElBQUcsTUFBTSxDQUFDLFNBQVY7YUFDRSxTQUFTLENBQUMsWUFBVixDQUFBLEVBREY7S0FKbUI7RUFBQSxDQUFyQixFQURNO0FBQUEsQ0FBUixDQUZBLENBQUE7O0FDQUEsR0FBRyxDQUFDLE1BQUosQ0FBVyxTQUFDLGNBQUQsRUFBaUIsa0JBQWpCLEdBQUE7QUFDVCxFQUFBLGNBQWMsQ0FBQyxLQUFmLENBQXFCLEtBQXJCLEVBQ0U7QUFBQSxJQUFBLEdBQUEsRUFBSyxNQUFMO0FBQUEsSUFDQSxRQUFBLEVBQVUsSUFEVjtBQUFBLElBRUEsV0FBQSxFQUFhLHFCQUZiO0dBREYsQ0FLQSxDQUFDLEtBTEQsQ0FLTyxXQUxQLEVBTUU7QUFBQSxJQUFBLEdBQUEsRUFBSyxRQUFMO0FBQUEsSUFDQSxLQUFBLEVBQ0U7QUFBQSxNQUFBLFdBQUEsRUFDRTtBQUFBLFFBQUEsV0FBQSxFQUFhLDBCQUFiO0FBQUEsUUFDQSxVQUFBLEVBQVksaUJBRFo7T0FERjtLQUZGO0dBTkYsQ0FZQSxDQUFDLEtBWkQsQ0FZTyxXQVpQLEVBYUU7QUFBQSxJQUFBLEdBQUEsRUFBSyxRQUFMO0FBQUEsSUFDQSxLQUFBLEVBQ0U7QUFBQSxNQUFBLFdBQUEsRUFDRTtBQUFBLFFBQUEsV0FBQSxFQUFhLDBCQUFiO0FBQUEsUUFDQSxVQUFBLEVBQVksaUJBRFo7T0FERjtLQUZGO0dBYkYsQ0FtQkEsQ0FBQyxLQW5CRCxDQW1CTyxjQW5CUCxFQW9CRTtBQUFBLElBQUEsR0FBQSxFQUFLLFdBQUw7QUFBQSxJQUNBLEtBQUEsRUFDRTtBQUFBLE1BQUEsY0FBQSxFQUNFO0FBQUEsUUFBQSxXQUFBLEVBQWEsNkJBQWI7QUFBQSxRQUNBLFVBQUEsRUFBWSxvQkFEWjtPQURGO0tBRkY7R0FwQkYsQ0FBQSxDQUFBO1NBMkJBLGtCQUFrQixDQUFDLFNBQW5CLENBQTZCLFlBQTdCLEVBNUJTO0FBQUEsQ0FBWCxDQUFBLENBQUE7O0FDQUEsSUFBQSxlQUFBOztBQUFBLEdBQUcsQ0FBQyxVQUFKLENBQWUsaUJBQWYsRUFDUTtBQUNTLEVBQUEseUJBQUUsTUFBRixFQUFVLFdBQVYsRUFBdUIsYUFBdkIsR0FBQTtBQUNYLElBRFksSUFBQyxDQUFBLFNBQUEsTUFDYixDQUFBO0FBQUEsSUFBQSxJQUFDLENBQUEsTUFBTSxDQUFDLFFBQVIsR0FBbUIsYUFBbkIsQ0FBQTtBQUFBLElBR0EsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLEdBQWUsRUFIZixDQUFBO0FBQUEsSUFLQSxXQUFXLENBQUMsZUFBWixDQUE0Qix5QkFBNUIsRUFDRTtBQUFBLE1BQUEsS0FBQSxFQUFPLElBQUMsQ0FBQSxNQUFSO0FBQUEsTUFDQSxTQUFBLEVBQVcsYUFEWDtLQURGLENBR0EsQ0FBQyxJQUhELENBR00sQ0FBQSxTQUFBLEtBQUEsR0FBQTthQUFBLFNBQUMsS0FBRCxHQUFBO2VBQ0osS0FBQyxDQUFBLE1BQU0sQ0FBQyxLQUFSLEdBQWdCLE1BRFo7TUFBQSxFQUFBO0lBQUEsQ0FBQSxDQUFBLENBQUEsSUFBQSxDQUhOLENBTEEsQ0FBQTtBQUFBLElBV0EsSUFBQyxDQUFBLE1BQU0sQ0FBQyxPQUFSLEdBQWtCLENBQUEsU0FBQSxLQUFBLEdBQUE7YUFBQSxTQUFBLEdBQUE7ZUFDaEIsS0FBQyxDQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBZCxDQUFBLEVBRGdCO01BQUEsRUFBQTtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FYbEIsQ0FBQTtBQUFBLElBY0EsSUFBQyxDQUFBLE1BQU0sQ0FBQyxRQUFSLEdBQW1CLENBQUEsU0FBQSxLQUFBLEdBQUE7YUFBQSxTQUFBLEdBQUE7QUFDakIsUUFBQSxJQUFtQyxtQ0FBbkM7QUFBQSxVQUFBLEtBQUMsQ0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQWpCLEdBQXlCLEVBQXpCLENBQUE7U0FBQTtBQUFBLFFBQ0EsS0FBQyxDQUFBLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQXZCLENBQTRCLEtBQUMsQ0FBQSxNQUFNLENBQUMsSUFBcEMsQ0FEQSxDQUFBO0FBQUEsUUFFQSxLQUFDLENBQUEsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFkLENBQUEsQ0FGQSxDQUFBO2VBR0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxlQUFaLEVBSmlCO01BQUEsRUFBQTtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FkbkIsQ0FBQTtBQUFBLElBcUJBLElBQUMsQ0FBQSxNQUFNLENBQUMsR0FBUixDQUFZLGNBQVosRUFBNEIsQ0FBQSxTQUFBLEtBQUEsR0FBQTthQUFBLFNBQUEsR0FBQTtlQUMxQixLQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsR0FBZSxHQURXO01BQUEsRUFBQTtJQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FBNUIsQ0FyQkEsQ0FEVztFQUFBLENBQWI7O3lCQUFBOztJQUZKLENBQUEsQ0FBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhcHAgPSBhbmd1bGFyLm1vZHVsZSAnYXBwJywgWydpb25pYycsICduZ1N0b3JhZ2UnXVxuXG5hcHAucnVuICgkaW9uaWNQbGF0Zm9ybSkgLT5cbiAgJGlvbmljUGxhdGZvcm0ucmVhZHkgLT5cbiAgICBpZiB3aW5kb3cuY29yZG92YSBhbmQgd2luZG93LmNvcmRvdmEucGx1Z2lucy5LZXlib2FyZFxuICAgICAgY29yZG92YS5wbHVnaW5zLktleWJvYXJkLmhpZGVLZXlib2FyZEFjY2Vzc29yeUJhciB0cnVlXG4gICAgICBcbiAgICBpZiB3aW5kb3cuU3RhdHVzQmFyXG4gICAgICBTdGF0dXNCYXIuc3R5bGVEZWZhdWx0KCkiLCJhcHAuY29uZmlnICgkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSAtPlxuICAkc3RhdGVQcm92aWRlci5zdGF0ZShcInRhYlwiLFxuICAgIHVybDogXCIvdGFiXCJcbiAgICBhYnN0cmFjdDogdHJ1ZVxuICAgIHRlbXBsYXRlVXJsOiBcInRlbXBsYXRlcy90YWJzLmh0bWxcIlxuICApXG4gIC5zdGF0ZSgndGFiLmV4YW1zJyxcbiAgICB1cmw6ICcvZXhhbXMnICAgIyBRdWkgdXRpbGl6emlhbW8gc29sbyAvZXhhbXMgcGVyY2jDqSBpbCBwcmVmaXNzbyBgL3RhYmAgw6ggY2FsY29sYXRvIGF1dG9tYXRpY2FtZW50ZSBkYWxsbyBzdGF0byBgdGFiLmV4YW1zYCAoYHRhYmAgcmVkaXJpZ2UgYWxsJ3VybCBgL3RhYmApXG4gICAgdmlld3M6IFxuICAgICAgJ3RhYi1leGFtcyc6XG4gICAgICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGVzL3RhYi1leGFtcy5odG1sJ1xuICAgICAgICBjb250cm9sbGVyOiAnRXhhbXNDb250cm9sbGVyJ1xuICApXG4gIC5zdGF0ZSgndGFiLnN0YXRzJyxcbiAgICB1cmw6ICcvc3RhdHMnXG4gICAgdmlld3M6XG4gICAgICAndGFiLXN0YXRzJzpcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvdGFiLXN0YXRzLmh0bWwnXG4gICAgICAgIGNvbnRyb2xsZXI6ICdTdGF0c0NvbnRyb2xsZXInXG4gIClcbiAgLnN0YXRlKCd0YWIuc2V0dGluZ3MnLFxuICAgIHVybDogJy9zZXR0aW5ncydcbiAgICB2aWV3czpcbiAgICAgICd0YWItc2V0dGluZ3MnOlxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy90YWItc2V0dGluZ3MuaHRtbCdcbiAgICAgICAgY29udHJvbGxlcjogJ1NldHRpbmdzQ29udHJvbGxlcidcbiAgKVxuICBcbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSAnL3RhYi9leGFtcyciLCJhcHAuY29udHJvbGxlciAnRXhhbXNDb250cm9sbGVyJyxcbiAgY2xhc3MgRXhhbXNDb250cm9sbGVyXG4gICAgY29uc3RydWN0b3I6IChAJHNjb3BlLCAkaW9uaWNNb2RhbCwgJGxvY2FsU3RvcmFnZSkgLT5cbiAgICAgIEAkc2NvcGUuJHN0b3JhZ2UgPSAkbG9jYWxTdG9yYWdlXG4gICAgICBcbiAgICAgICMgUHJlY2FyaWNvIGxhIG1vZGFsIHBlciBtb3N0cmFyZSAnQWdnaXVuZ2kgRXNhbWUnXG4gICAgICBAJHNjb3BlLmV4YW0gPSB7fVxuICAgICAgXG4gICAgICAkaW9uaWNNb2RhbC5mcm9tVGVtcGxhdGVVcmwgJ3RlbXBsYXRlcy9hZGQtZXhhbS5odG1sJyxcbiAgICAgICAgc2NvcGU6IEAkc2NvcGVcbiAgICAgICAgYW5pbWF0aW9uOiAnc2xpZGUtaW4tdXAnXG4gICAgICAudGhlbiAobW9kYWwpID0+XG4gICAgICAgIEAkc2NvcGUubW9kYWwgPSBtb2RhbFxuICAgICAgXG4gICAgICBAJHNjb3BlLmFkZEV4YW0gPSA9PlxuICAgICAgICBAJHNjb3BlLm1vZGFsLnNob3coKVxuICAgICAgICBcbiAgICAgIEAkc2NvcGUuc2F2ZUV4YW0gPSA9PlxuICAgICAgICBAJHNjb3BlLiRzdG9yYWdlLmV4YW1zID0gW10gaWYgbm90IEAkc2NvcGUuJHN0b3JhZ2UuZXhhbXM/XG4gICAgICAgIEAkc2NvcGUuJHN0b3JhZ2UuZXhhbXMucHVzaCBAJHNjb3BlLmV4YW1cbiAgICAgICAgQCRzY29wZS5tb2RhbC5oaWRlKClcbiAgICAgICAgY29uc29sZS5sb2cgJ0hlbGxvISBTYXZlZC4nXG4gICAgICAgIFxuICAgICAgIyBSZXNldHRvIGxvIHNjb3BlIChleGFtKSBxdWFuZG8gw6ggc3RhdG8gaW5zZXJpdG9cbiAgICAgIEAkc2NvcGUuJG9uICdtb2RhbC5oaWRkZW4nLCA9PlxuICAgICAgICBAJHNjb3BlLmV4YW0gPSB7fVxuICAgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgXG4gICAgICBcbiAgICAgICJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==